{"version":3,"sources":["components/EmptyState/EmptyState.js","screens/SearchPage/SearchPage.js","screens/Medicine/AddMedicineForm.js","screens/Medicine/UpdateMedicineForm.js","screens/Medicine/Medicine.js","screens/Checkout/Checkout.js","common/invoice.js"],"names":["EmptyState","actions","useHistory","className","size","SORT_BY_MENUS","label","value","BRANDS_FILTER","PRODUCT_FORM","PRESCRIPTION_REQUIRED","AGE","SearchPage","location","history","dispatch","useDispatch","searchedQuery","URLSearchParams","search","get","useState","show","setShow","sortBy","setSortBy","currentAddToCartIndex","setCurrentAddToCartIndex","medicine_brand","product_form","presecription_required","age","filters","setFilters","useEffect","params","paramsToObject","Object","fromEntries","entries","copyFilters","split","delete","append","getSearchedData","push","length","updatedFilters","toString","keys","forEach","key","filteredListingData","useSelector","state","status","onClick","clearFilter","flush","Item","eventKey","Header","Body","map","item","Check","type","name","checked","indexOf","onChange","e","target","brandNames","splice","style","cursor","onSelect","Toggle","variant","id","Menu","inline","searchedData","i","sell_price","display","index","updateOld","currentItem","oldItems","count","findIndex","isFind","itemIndex","checkDuplicate","JSON","parse","ls","set","stringify","setTimeout","handleAddToCart","color","fullscreen","onHide","closeButton","Title","AddMedicineForm","shop_id","instanceShop","submitForm","payload","a","config","headers","Authorization","axios","post","then","response","toast","success","catch","error","message","validate","Yup","required","company","medical_typ","manufacture","qty_in_strip","positive","integer","in_stock_total","free_strip","description","shelf_no","batch_no","s_gst","c_gst","buy_price","medicine_tags","expire_date","mfg_date","category","unit_of_measure","buyer","validationSchema","initialValues","onSubmit","values","formik","Container","Row","Col","md","TextField","disabled","Button","border","backgroundColor","isValid","dirty","UpdateMedicineForm","setSearchedQuery","searchSelectorData","setSearchSelectorData","med","setMed","medId","setMedId","preventDefault","width","Control","placeholder","borderTopLeftRadius","borderBottomLeftRadius","data","console","log","searchMedicine","patch","updateMedicineData","Medicine","activeTab","setActiveTab","Card","Tabs","activeKey","k","Tab","title","Checkout","cartData","setCartData","totalAmount","setTotalAmount","filteredDataForInvoice","setFilteredDataForInvoice","isLoading","setIsLoading","currentCartData","currentTotalAmount","filteredData","quantity","tax","price","invoiceGenerator","logo","senderDetails","clientDetails","invoiceNumber","invoiceDate","products","bottomNotice","currency","locale","taxNotation","marginTop","marginRight","marginLeft","marginBottom","sender","client","easyinvoice","createInvoice","result","download","pdf","PDFInvoice","address","zip","city","country","todayTime","Date","getMonth","getDate","getFullYear","getFormattedDate","remove","decrementCountHandler","copyData","filteredDdata","filter","cartItem","incrementCountHandler","removeOrderHandler","lsData","lsItem","Loader","Number","qty","AUTH_TOKEN","medicines","checkMedicineAvailability"],"mappings":"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","file":"static/js/checkout.7743d384.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { PaintBucket } from \"react-bootstrap-icons\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./EmptyState.css\";\r\n\r\nconst EmptyState = ({ actions }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"empty-state-wrapper\">\r\n      <p>\r\n        <PaintBucket size={100} />\r\n      </p>\r\n      <p>\r\n        <h4>No data found!</h4>\r\n      </p>\r\n      {actions}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyState;\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Form,\r\n  Dropdown,\r\n  Card,\r\n  Button,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { FunnelFill } from \"react-bootstrap-icons\";\r\nimport \"./SearchPage.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport EmptyState from \"../../components/EmptyState/EmptyState\";\r\nimport { getSearchedData } from \"../../features/search/searchSlice\";\r\nimport ls from \"local-storage\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nconst SORT_BY_MENUS = [\r\n  { label: \"Relevance\", value: \"relevance\" },\r\n  { label: \"Price: Low to High\", value: \"lowToHigh\" },\r\n  { label: \"Price: High to Low\", value: \"highToLow\" },\r\n];\r\n\r\nconst BRANDS_FILTER = [\r\n  { label: \"StayHappi\", value: \"StayHappi\" },\r\n  { label: \"Dolo\", value: \"Dolo\" },\r\n  { label: \"Crocin\", value: \"Crocin\" },\r\n  { label: \"Alkem\", value: \"Alkem\" },\r\n  { label: \"Metacin\", value: \"Metacin\" },\r\n];\r\n\r\nconst PRODUCT_FORM = [\r\n  { label: \"Tablet\", value: \"Tablet\" },\r\n  { label: \"Syrup\", value: \"Syrup\" },\r\n  { label: \"Drop\", value: \"Drop\" },\r\n  { label: \"Injection\", value: \"Injection\" },\r\n  { label: \"Capsule\", value: \"Capsule\" },\r\n];\r\n\r\nconst PRESCRIPTION_REQUIRED = [\r\n  { label: \"Required\", value: \"true\" },\r\n  { label: \"Not Required\", value: \"false\" },\r\n];\r\n\r\nconst AGE = [\r\n  { label: \"All\", value: \"All\" },\r\n  { label: \"Child\", value: \"Child\" },\r\n];\r\n\r\nconst SearchPage = ({ location }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const params = new URLSearchParams(location.search);\r\n  const searchedQuery = params.get(\"searchQuery\");\r\n  const [show, setShow] = useState(false);\r\n  const [sortBy, setSortBy] = useState(\"Relevance\");\r\n  const [currentAddToCartIndex, setCurrentAddToCartIndex] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    medicine_brand: [],\r\n    product_form: [],\r\n    presecription_required: [],\r\n    age: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    if (params.get(\"asc\")) {\r\n      if (params.get(\"asc\") === \"true\") {\r\n        setSortBy(\"Price: Low to High\");\r\n      } else {\r\n        setSortBy(\"Price: High to Low\");\r\n      }\r\n    }\r\n\r\n    const paramsToObject = Object.fromEntries(params.entries());\r\n\r\n    const copyFilters = { ...filters };\r\n\r\n    copyFilters.medicine_brand =\r\n      paramsToObject && paramsToObject.medicine_brand\r\n        ? paramsToObject.medicine_brand.split(\",\")\r\n        : [];\r\n    copyFilters.product_form =\r\n      paramsToObject && paramsToObject.product_form\r\n        ? paramsToObject.product_form.split(\",\")\r\n        : [];\r\n    copyFilters.presecription_required =\r\n      paramsToObject && paramsToObject.presecription_required\r\n        ? paramsToObject.presecription_required.split(\",\")\r\n        : [];\r\n    copyFilters.age =\r\n      paramsToObject && paramsToObject.age ? paramsToObject.age.split(\",\") : [];\r\n\r\n    setFilters(copyFilters);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    if (sortBy !== \"Relevance\") {\r\n      if (params.get(\"asc\")) {\r\n        params.delete(\"asc\");\r\n      }\r\n      params.append(\"asc\", sortBy === \"Price: Low to High\" ? \"true\" : \"false\");\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    } else {\r\n      if (params.get(\"asc\")) {\r\n        params.delete(\"asc\");\r\n      }\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    }\r\n  }, [sortBy]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      filters.medicine_brand.length > 0 ||\r\n      filters.product_form.length > 0 ||\r\n      filters.presecription_required > 0 ||\r\n      filters.age.length > 0\r\n    ) {\r\n      const params = new URLSearchParams(location.search);\r\n      let updatedFilters = { ...filters };\r\n\r\n      updatedFilters.medicine_brand = updatedFilters.medicine_brand.toString();\r\n      updatedFilters.product_form = updatedFilters.product_form.toString();\r\n      updatedFilters.presecription_required =\r\n        updatedFilters.presecription_required.toString();\r\n      updatedFilters.age = updatedFilters.age.toString();\r\n\r\n      Object.keys(updatedFilters).forEach((key) => {\r\n        if (updatedFilters[key]) {\r\n          if (params.get(key)) {\r\n            params.delete(key);\r\n          }\r\n          params.append(key, updatedFilters[key]);\r\n        }\r\n      });\r\n\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    }\r\n  }, [filters]);\r\n\r\n  const clearFilter = () => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    params.delete(\"medicine_brand\");\r\n    params.delete(\"product_form\");\r\n    params.delete(\"presecription_required\");\r\n    params.delete(\"age\");\r\n\r\n    dispatch(getSearchedData(params));\r\n    history.push(`/search?${params}`);\r\n    setFilters({\r\n      medicine_brand: [],\r\n      product_form: [],\r\n      presecription_required: [],\r\n      age: [],\r\n    });\r\n  };\r\n\r\n  const checkDuplicate = (currentItem, oldItems) => {\r\n    if (oldItems.length == 0) {\r\n      currentItem.count = 1;\r\n      oldItems.push(currentItem);\r\n      return oldItems;\r\n    }\r\n    let isFind = false;\r\n    let findIndex;\r\n    for (let itemIndex = 0; itemIndex < oldItems.length; itemIndex++) {\r\n      if (oldItems[itemIndex].id === currentItem.id) {\r\n        findIndex = itemIndex;\r\n        isFind = true;\r\n      }\r\n    }\r\n    if (isFind) {\r\n      oldItems[findIndex].count = oldItems[findIndex].count + 1;\r\n      return oldItems;\r\n    }\r\n    currentItem.count = 1;\r\n    oldItems.push(currentItem);\r\n    return oldItems;\r\n  };\r\n\r\n  const handleAddToCart = (item, index) => {\r\n    let currentItem = { ...item };\r\n    let oldItems = JSON.parse(ls.get(\"cartData\")) || [];\r\n    let updateOld = checkDuplicate(currentItem, oldItems);\r\n\r\n    ls.set(\"cartData\", JSON.stringify(updateOld));\r\n\r\n    //////\r\n    setCurrentAddToCartIndex(index);\r\n    setTimeout(() => {\r\n      setCurrentAddToCartIndex(null);\r\n    }, 1000);\r\n  };\r\n\r\n  let filteredListingData = useSelector((state) => state.search);\r\n\r\n  if (filteredListingData.status === \"failed\") {\r\n    return <>Error</>;\r\n  }\r\n\r\n  if (\r\n    filteredListingData.status === \"success\" ||\r\n    filteredListingData.status === \"loading\"\r\n  ) {\r\n    return (\r\n      <>\r\n      <Header/>\r\n        <div className=\"search-page-wrapper\">\r\n          <div className=\"search-page--left-panel\">\r\n            <div className=\"m-b-12 clear-filter-wrapper\">\r\n              <h4>Filters</h4>\r\n              <span className=\"clear-filter\" onClick={() => clearFilter()}>\r\n                Clear Filters\r\n              </span>\r\n            </div>\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Brands</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {BRANDS_FILTER.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={\r\n                        filters.medicine_brand.indexOf(item.value) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.medicine_brand;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            medicine_brand: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.medicine_brand.indexOf(e.target.name) !== -1\r\n                          ) {\r\n                            let brandNames = filters.medicine_brand;\r\n                            brandNames.splice(\r\n                              filters.medicine_brand.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              medicine_brand: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Product Form</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {PRODUCT_FORM.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={filters.product_form.indexOf(item.value) !== -1}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.product_form;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            product_form: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.product_form.indexOf(e.target.name) !== -1\r\n                          ) {\r\n                            let brandNames = filters.product_form;\r\n                            brandNames.splice(\r\n                              filters.product_form.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              product_form: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Prescription Required</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {PRESCRIPTION_REQUIRED.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={\r\n                        filters.presecription_required.indexOf(item.value) !==\r\n                        -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.presecription_required;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            presecription_required: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.presecription_required.indexOf(\r\n                              e.target.name\r\n                            ) !== -1\r\n                          ) {\r\n                            let brandNames = filters.presecription_required;\r\n                            brandNames.splice(\r\n                              filters.presecription_required.indexOf(\r\n                                e.target.name\r\n                              ),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              presecription_required: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            {/* <Accordion flush className=\"m-b-12\">\r\n                <Accordion.Item eventKey=\"1\">\r\n                  <Accordion.Header>Usage</Accordion.Header>\r\n                  <Accordion.Body className=\"accordion-body\">\r\n                    <Form.Check type=\"checkbox\" label=\"Fever\" />\r\n                    <Form.Check type=\"checkbox\" label=\"Cough & Cold\" />\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion> */}\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Age</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {AGE.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={filters.age.indexOf(item.value) !== -1}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.age;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            age: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (filters.age.indexOf(e.target.name) !== -1) {\r\n                            let brandNames = filters.age;\r\n                            brandNames.splice(\r\n                              filters.age.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              age: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </div>\r\n\r\n          <div className=\"search-page--right-panel\">\r\n            <div className=\"search-page--header\">\r\n              <div className=\"flex-column\">\r\n                <span className=\"font-size-14\">Search Results</span>\r\n                <span className=\"font-size-26\">\"{searchedQuery}\"</span>\r\n              </div>\r\n              <div className=\"flex-items-center\">\r\n                <span>Sort By</span>\r\n                <span>\r\n                  <Dropdown\r\n                    className=\"dropdown-wrapper\"\r\n                    onSelect={(value) => {\r\n                      setSortBy(value);\r\n                    }}\r\n                  >\r\n                    <Dropdown.Toggle variant=\"white\" id=\"dropdown-basic\">\r\n                      {sortBy}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      {SORT_BY_MENUS.map((item) => (\r\n                        <Dropdown.Item eventKey={item.label} key={item.value}>\r\n                          {item.label}\r\n                        </Dropdown.Item>\r\n                      ))}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"margin-top-12\">\r\n              {filteredListingData.status === \"loading\" ? (\r\n                <div>\r\n                  <Loader inline={true} />\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {filteredListingData &&\r\n                  filteredListingData.searchedData &&\r\n                  filteredListingData.searchedData.length ? (\r\n                    <>\r\n                      {filteredListingData.searchedData.map((item, i) => (\r\n                        <Card className=\"m-b-12\" key={item.id}>\r\n                          <Card.Body>\r\n                            <div className=\"flex-column\">\r\n                              <div className=\"flex-content-sb\">\r\n                                <div className=\"flex-column\">\r\n                                  <span className=\"font-weight-700\">\r\n                                    {item?.name}\r\n                                  </span>\r\n                                  {/* <span className=\"tablets-strip\">\r\n                                    strip of 15 tablets\r\n                                  </span> */}\r\n                                </div>\r\n\r\n                                <div className=\"flex-column\">\r\n                                  <span>₹{item?.sell_price || 0}</span>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"search-page--counter-wrapper\">\r\n                                <div className=\"search-page-wrapper\"></div>\r\n                                <div\r\n                                  id=\"addToCartWrapper\"\r\n                                  style={{ display: \"flex\" }}\r\n                                >\r\n                                  {currentAddToCartIndex === i && (\r\n                                    <div className=\"search-page--add-cart\">\r\n                                      &#10003;\r\n                                    </div>\r\n                                  )}\r\n                                  &nbsp;\r\n                                  {currentAddToCartIndex !== i ? (\r\n                                    <div\r\n                                      className=\"search-page--add-cart\"\r\n                                      onClick={() => {\r\n                                        handleAddToCart(item, i);\r\n                                      }}\r\n                                    >\r\n                                      ADD TO CART\r\n                                    </div>\r\n                                  ) : (\r\n                                    <>\r\n                                      {currentAddToCartIndex === i && (\r\n                                        <div\r\n                                          id=\"addToCart\"\r\n                                          className=\"search-page--add-cart\"\r\n                                        >\r\n                                          ADDED\r\n                                        </div>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <EmptyState />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"filter-button\">\r\n            <Button\r\n              onClick={() => setShow(true)}\r\n              className=\"funner-filter--wrapper\"\r\n            >\r\n              <FunnelFill\r\n                size={30}\r\n                color=\"#28b8b0\"\r\n                className=\"mr-20 cursor-pointer\"\r\n              />\r\n            </Button>\r\n          </div>\r\n\r\n          <Modal show={show} fullscreen={true} onHide={() => setShow(false)}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Apply Filters</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Brands</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {BRANDS_FILTER.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.medicine_brand.indexOf(item.value) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.medicine_brand;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                medicine_brand: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.medicine_brand.indexOf(\r\n                                  e.target.name\r\n                                ) !== -1\r\n                              ) {\r\n                                let brandNames = filters.medicine_brand;\r\n                                brandNames.splice(\r\n                                  filters.medicine_brand.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  medicine_brand: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Product Form</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {PRODUCT_FORM.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.product_form.indexOf(item.value) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.product_form;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                product_form: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.product_form.indexOf(e.target.name) !==\r\n                                -1\r\n                              ) {\r\n                                let brandNames = filters.product_form;\r\n                                brandNames.splice(\r\n                                  filters.product_form.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  product_form: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Prescription Required</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {PRESCRIPTION_REQUIRED.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.presecription_required.indexOf(\r\n                              item.value\r\n                            ) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.presecription_required;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                presecription_required: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.presecription_required.indexOf(\r\n                                  e.target.name\r\n                                ) !== -1\r\n                              ) {\r\n                                let brandNames = filters.presecription_required;\r\n                                brandNames.splice(\r\n                                  filters.presecription_required.indexOf(\r\n                                    e.target.name\r\n                                  ),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  presecription_required: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Age</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {AGE.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={filters.age.indexOf(item.value) !== -1}\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.age;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                age: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (filters.age.indexOf(e.target.name) !== -1) {\r\n                                let brandNames = filters.age;\r\n                                brandNames.splice(\r\n                                  filters.age.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  age: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <div className=\"filter-apply-button\">\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                      size=\"lg\"\r\n                      className=\"apply-button--wrapper\"\r\n                      onClick={() => setShow(false)}\r\n                    >\r\n                      Apply\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport TextField from \"../../components/TextField/TextField\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { AUTH_TOKEN } from \"../../localStorage\";\r\nimport { toast } from \"../../components/Toast/Toast\";\r\nimport { instanceShop } from \"../../features/shop/shopSlice\";\r\nimport {useSelector} from 'react-redux'\r\nimport ls from  'local-storage'\r\nconst AddMedicineForm = () => {\r\n  const shop_id  = useSelector(instanceShop)\r\n  const submitForm = async (payload) => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Token ${ls.length('token')}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .post(\r\n        \"https://abdulrashidalaskar.pythonanywhere.com/api/medicine/\",\r\n        payload,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        toast.success(\"Medicine added successfully\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message || \"Something went wrong!\");\r\n      });\r\n  };\r\n\r\n  const validate = Yup.object({\r\n    name: Yup.string().required(\"Required*\"),\r\n    company: Yup.string().required(\"Required*\"),\r\n    medical_typ: Yup.string().required(\"Required*\"),\r\n    // in_single_stock_total: Yup.number().required(\"Required*\"),\r\n    manufacture: Yup.string().required(\"Required*\"),\r\n    qty_in_strip: Yup.number().required(\"Required*\").positive().integer(),\r\n    in_stock_total: Yup.number().required(\"Required*\").positive().integer(),\r\n    free_strip: Yup.number().required(\"Required*\").positive().integer(),\r\n    description: Yup.string().required(\"Required*\"),\r\n    shelf_no: Yup.string().required(\"Required*\"),\r\n    batch_no: Yup.string().required(\"Required*\"),\r\n    s_gst: Yup.string().required(\"Required*\"),\r\n    c_gst: Yup.string().required(\"Required*\"),\r\n    sell_price: Yup.number().required(\"Required*\").positive().integer(),\r\n    buy_price: Yup.number().required(\"Required*\").positive().integer(),\r\n    medicine_tags: Yup.string().required(\"Required*\"),\r\n    expire_date: Yup.date().required(\"Required*\"),\r\n    mfg_date: Yup.date().required(\"Required*\"),\r\n    category: Yup.string().required(\"Required*\"),\r\n    unit_of_measure: Yup.string().required(\"Required*\"),\r\n    // schedule_drug: Yup.string().required(\"Required*\"),\r\n    buyer: Yup.string().required(\"Required*\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={validate}\r\n      initialValues={{\r\n        name: \"\",\r\n        company: shop_id,\r\n        manufacture: \"\",\r\n        qty_in_strip: \"\",\r\n        in_stock_total: \"\",\r\n        free_strip: \"\",\r\n        description: \"\",\r\n        shelf_no: \"\",\r\n        batch_no: \"\",\r\n        s_gst: \"\",\r\n        c_gst: \"\",\r\n        sell_price: \"\",\r\n        buy_price: \"\",\r\n        medicine_tags: \"\",\r\n        expire_date: \"\",\r\n        mfg_date: \"\",\r\n        category: \"\",\r\n        unit_of_measure: \"\",\r\n        buyer: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        submitForm(values);\r\n      }}\r\n    >\r\n      {(formik) => (\r\n        <div>\r\n          <Form>\r\n            <Container>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <TextField label=\"Medicine Name\" name=\"name\" type=\"text\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField label=\"Company Name\" name=\"company\" value={shop_id}  disabled type=\"text\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"manufacture\"\r\n                    label=\"Manufacturer Name\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"qty_in_strip\"\r\n                    label=\"Quantity In Strip\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"category\" label=\"Category\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"buyer\" label=\"Buyer\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"medical_typ\"\r\n                    label=\"Medical Type\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"in_stock_total\"\r\n                    label=\"In Stock Total\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n               \r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"free_strip\"\r\n                    label=\"Free Strip\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                \r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"shelf_no\" label=\"Shelf Number\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"batch_no\" label=\"Batch Number\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                \r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"s_gst\" label=\"SGST\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField type=\"text\" name=\"c_gst\" label=\"CGST\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                \r\n                <Col md={6}>\r\n                  <TextField type=\"number\" name=\"sell_price\" label=\"Sell Price\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField type=\"number\" name=\"buy_price\" label=\"Buy Price\" />\r\n                </Col>\r\n              </Row>\r\n              \r\n              <Row>\r\n                \r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"medicine_tags\"\r\n                    label=\"Medicine Tags\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"unit_of_measure\"\r\n                    label=\"Unit of Measure\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n \r\n              <Row>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    name=\"expire_date\"\r\n                    label=\"Expiry Date\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    name=\"mfg_date\"\r\n                    label=\"Manufacturing Date\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      border: \"none\",\r\n                      backgroundColor: \"#28b8b0\",\r\n                    }}\r\n                    disabled={!(formik.isValid && formik.dirty)}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Button type=\"submit\" variant=\"outline-secondary\">\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Row>\r\n            </Container>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddMedicineForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form as BootstrapForm,\r\n} from \"react-bootstrap\";\r\nimport TextField from \"../../components/TextField/TextField\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Search } from \"react-bootstrap-icons\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport ls from 'local-storage'\r\nimport axios from \"axios\";\r\n\r\nconst UpdateMedicineForm = () => {\r\n  const [searchedQuery, setSearchedQuery] = useState(\"\");\r\n  const [searchSelectorData, setSearchSelectorData] = useState(\"\");\r\n  const [med, setMed] = useState('')\r\n  const [medId, setMedId] = useState('')\r\n\r\n  const validate = Yup.object({\r\n    // name: Yup.string().required(\"Required*\"),\r\n    in_stock_total: Yup.number().required(\"Required*\").positive().integer(),\r\n    free_strip: Yup.number().required(\"Required*\").positive().integer()\r\n  });\r\n\r\n  const searchMedicine = () => {\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Token ${ls.get('token')}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        `https://abdulrashidalaskar.pythonanywhere.com/search?searchQuery=${searchedQuery}`,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        setSearchSelectorData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const updateMedicineData = (values) => {\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${ls.get('token')}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .patch(\r\n        `https://abdulrashidalaskar.pythonanywhere.com/api/medicine/${medId}/`,\r\n        values,\r\n        config\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n\r\n      <Container >\r\n        <Row>\r\n          <Col>\r\n            <BootstrapForm\r\n              style={{ display: \"flex\" }}\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <div style={{width:\"100%\"}}>\r\n                <div style={{display:\"flex\"}}>\r\n                  <BootstrapForm.Control\r\n                    placeholder=\"Search..\"\r\n                    type=\"text\"\r\n                    name=\"searchbox\"\r\n                    value={searchedQuery}\r\n                    className=\"header-form-control\"\r\n                    onChange={(e) => {\r\n                      setSearchedQuery(e.target.value);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={!searchedQuery}\r\n                    style={{\r\n                      border: \"none\",\r\n                      borderTopLeftRadius: 0,\r\n                      borderBottomLeftRadius: 0,\r\n                      backgroundColor: \"#28b8b0\",\r\n                    }}\r\n                    onClick={() => {\r\n                      searchMedicine();\r\n                    }}\r\n                  >\r\n                    <Search size={25} />\r\n                  </Button>\r\n              </div>\r\n              {searchSelectorData && searchSelectorData.length && (\r\n                <div className=\"search-selector-wrapper\" >\r\n                  {searchSelectorData &&\r\n                    searchSelectorData.length &&\r\n                    searchSelectorData.map((item) => (\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setMed(item.name);\r\n                              setMedId(item.id)\r\n                            }}\r\n                            className=\"header-form-control form-control\"\r\n                          >\r\n                            {item.name}\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    ))}\r\n                    \r\n                </div>\r\n                \r\n              )}\r\n              </div>\r\n              \r\n            </BootstrapForm>\r\n          </Col>\r\n          \r\n        </Row>\r\n        \r\n      </Container>\r\n      <br />\r\n      <Formik\r\n        validationSchema={validate}\r\n        initialValues={{\r\n          in_stock_total: \"\",\r\n          free_strip:\"\"\r\n        }}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          updateMedicineData(values)\r\n        }}\r\n      >\r\n        {(formik) => (\r\n          <div>\r\n            <Form>\r\n              <Container>\r\n                <Row>\r\n                  <Col md={4}>\r\n                    <TextField label=\"Medicine Name\" value={med}  name=\"name\" type=\"text\" />\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      name=\"in_stock_total\"\r\n                      label=\"In Stock Total\"\r\n                    />\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      name=\"free_strip\"\r\n                      label=\"Free strip\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      style={{\r\n                        border: \"none\",\r\n                        backgroundColor: \"#28b8b0\",\r\n                      }}\r\n                      disabled={!(formik.isValid && formik.dirty)}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"outline-secondary\">\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </Container>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateMedicineForm;\r\n","import React, { useState } from \"react\";\r\nimport { Tabs, Tab, Card } from \"react-bootstrap\";\r\nimport AddMedicineForm from \"./AddMedicineForm\";\r\nimport UpdateMedicineForm from \"./UpdateMedicineForm\";\r\nimport \"./Medicine.css\";\r\n\r\nconst Medicine = () => {\r\n  const [activeTab, setActiveTab] = useState(\"addMedicine\");\r\n  return (\r\n    <div className=\"medicine-wrapper\">\r\n      <Card>\r\n        <Card.Body>\r\n          <Tabs\r\n            activeKey={activeTab}\r\n            onSelect={(k) => setActiveTab(k)}\r\n            className=\"mb-3\"\r\n          >\r\n            <Tab eventKey=\"addMedicine\" title=\"Add Medicine\">\r\n              <AddMedicineForm />\r\n            </Tab>\r\n            <Tab eventKey=\"updateMedicine\" title=\"Update Medicine\">\r\n              <UpdateMedicineForm />\r\n            </Tab>\r\n          </Tabs>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Medicine;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { PDFInvoice } from \"../../common/invoice\";\r\nimport \"./Checkout.css\";\r\nimport ls from \"local-storage\";\r\nimport EmptyState from \"../../components/EmptyState/EmptyState\";\r\nimport { AUTH_TOKEN } from \"../../localStorage\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { toast } from \"../../components/Toast/Toast\";\r\nimport { useHistory } from \"react-router\";\r\nimport Header from \"../../components/Header/Header\";\r\nconst Checkout = () => {\r\n  const [cartData, setCartData] = useState([]);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [filteredDataForInvoice, setFilteredDataForInvoice] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    const currentCartData = JSON.parse(ls.get(\"cartData\"));\r\n    if (currentCartData && currentCartData.length > 0) {\r\n      setCartData(currentCartData);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let currentTotalAmount = 0;\r\n    cartData.map((item) => {\r\n      currentTotalAmount += item.count * item.sell_price;\r\n    });\r\n\r\n    setTotalAmount(currentTotalAmount);\r\n\r\n    let filteredData = [];\r\n    for (let i = 0; i < cartData.length; i++) {\r\n      filteredData.push({\r\n        quantity: cartData[i].count,\r\n        description: cartData[i].name,\r\n        tax: 12,\r\n        price: cartData[i].sell_price * cartData[i].count,\r\n      });\r\n    }\r\n    setFilteredDataForInvoice(filteredData);\r\n  }, [cartData]);\r\n\r\n  const getFormattedDate = () => {\r\n    let todayTime = new Date();\r\n\r\n    let month = todayTime.getMonth() + 1;\r\n    let day = todayTime.getDate();\r\n    let year = todayTime.getFullYear();\r\n    return month + \"/\" + day + \"/\" + year;\r\n  };\r\n\r\n  const invoiceGenerator = () => {\r\n    const logo =\r\n      \"https://www.logomoose.com/wp-content/uploads/2013/08/ms_moose.jpg\";\r\n    const senderDetails = {\r\n      company: \"Sample Corp\",\r\n      address: \"Sample Street 123\",\r\n      zip: \"1234 AB\",\r\n      city: \"Sampletown\",\r\n      country: \"Samplecountry\",\r\n    };\r\n    const clientDetails = {\r\n      company: \"Client Corp\",\r\n      address: \"Clientstreet 456\",\r\n      zip: \"4567 CD\",\r\n      city: \"Clientcity\",\r\n      country: \"Clientcountry\",\r\n    };\r\n    const invoiceNumber = \"2021.0001\";\r\n    const invoiceDate = getFormattedDate();\r\n    const products = filteredDataForInvoice;\r\n    const bottomNotice = \"Please visit again. Thank you.\";\r\n    PDFInvoice(\r\n      logo,\r\n      senderDetails,\r\n      clientDetails,\r\n      invoiceNumber,\r\n      invoiceDate,\r\n      products,\r\n      bottomNotice\r\n    );\r\n    setIsLoading(false);\r\n    setCartData([]);\r\n    ls.remove(\"cartData\");\r\n    // history.goBack()\r\n  };\r\n\r\n  const decrementCountHandler = async (item) => {\r\n    let copyData = { ...item };\r\n    if (copyData.count > 1) {\r\n      copyData.count = copyData.count - 1;\r\n      let filteredDdata = cartData.filter(\r\n        (cartItem) => cartItem.id !== item.id\r\n      );\r\n      await filteredDdata.push(copyData);\r\n      await setCartData(filteredDdata);\r\n      await ls.remove(\"cartData\");\r\n      await ls.set(\"cartData\", JSON.stringify(filteredDdata));\r\n    }\r\n  };\r\n\r\n  const incrementCountHandler = async (item) => {\r\n    let copyData = { ...item };\r\n    copyData.count = copyData.count + 1;\r\n    let filteredDdata = cartData.filter((cartItem) => cartItem.id !== item.id);\r\n    await filteredDdata.push(copyData);\r\n    await setCartData(filteredDdata);\r\n    await ls.remove(\"cartData\");\r\n    await ls.set(\"cartData\", JSON.stringify(filteredDdata));\r\n  };\r\n\r\n  const removeOrderHandler = async (item) => {\r\n    let lsData = JSON.parse(ls.get(\"cartData\"));\r\n    let filteredData = lsData.filter((lsItem) => lsItem.id !== item.id);\r\n\r\n    setCartData(filteredData);\r\n    await ls.remove(\"cartData\");\r\n    await ls.set(\"cartData\", JSON.stringify(filteredData));\r\n  };\r\n\r\n  const checkMedicineAvailability = () => {\r\n    setIsLoading(true);\r\n    let filteredData = [];\r\n    for (let i = 0; i < cartData.length; i++) {\r\n      filteredData.push({ id: cartData[i].id, qty: cartData[i].count });\r\n    }\r\n\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Token ${AUTH_TOKEN}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"http://abdulrashidalaskar.pythonanywhere.com/api/order/\",\r\n        { medicines: filteredData },\r\n        config\r\n      )\r\n      .then((response) => {\r\n        invoiceGenerator();\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Medicine out of stock!\");\r\n        setIsLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <div className=\"checkout-page-wrapper\">\r\n      \r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {cartData && cartData.length > 0 ? (\r\n            <>\r\n              <div className=\"order-summary-wrapper\">Order Summary</div>\r\n              <div className=\"products-wrapper\">PRODUCTS</div>\r\n              <div className=\"checkout-page-content-wrapper\">\r\n                <div className=\"flex-1\">\r\n                  <Card className=\"margin-bottom-12\">\r\n                    <Card.Body>\r\n                      {cartData.map((item) => (\r\n                        <section className=\"medicine-card-wrapper\">\r\n                          <div className=\"flex-content-sb\">\r\n                            <div className=\"flex-column\">\r\n                              <span className=\"font-weight-700\">\r\n                                {item.name}\r\n                              </span>\r\n                              {/* <span className=\"tablets-strip\">\r\n                          strip of 15 tablets\r\n                        </span> */}\r\n                            </div>\r\n\r\n                            <div className=\"checkout-price\">\r\n                              Rs. {item.sell_price * Number(item.count)}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"checkout-page--counter-wrapper\">\r\n                            <div className=\"checkout-counter--wrapper\">\r\n                              <div\r\n                                className=\"increment-decrement-counter-wrapper\"\r\n                                onClick={() => {\r\n                                  decrementCountHandler(item);\r\n                                }}\r\n                              >\r\n                                -\r\n                              </div>\r\n                              &nbsp;\r\n                              <div className=\"checkout-page--counter-value\">\r\n                                {item.count}\r\n                              </div>\r\n                              &nbsp;\r\n                              <div\r\n                                className=\"increment-decrement-counter-wrapper\"\r\n                                onClick={() => {\r\n                                  incrementCountHandler(item);\r\n                                }}\r\n                              >\r\n                                +\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <Button\r\n                                variant=\"secondary\"\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  removeOrderHandler(item);\r\n                                }}\r\n                              >\r\n                                Remove\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </section>\r\n                      ))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n                <div className=\"checkout-payment-details\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <div className=\"opacity-6\">PAYMENT DETAILS</div>\r\n                      <div className=\"total-amount\">\r\n                        <div>Total Amount *</div>\r\n                        <div>Rs. {totalAmount}</div>\r\n                      </div>\r\n\r\n                      <div className=\"total-amoount-wrapper\">\r\n                        <div className=\"flex-column\">\r\n                          <div className=\"total-amount-wrapper\">\r\n                            TOTAL AMOUNT\r\n                          </div>\r\n                          <div className=\"font-weight-bold\">\r\n                            Rs. {totalAmount}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <Button\r\n                            className=\"checkout-proceed-button\"\r\n                            onClick={() => {\r\n                              checkMedicineAvailability();\r\n                            }}\r\n                          >\r\n                            DOWNLOAD INVOICE\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <EmptyState\r\n              actions={\r\n                <h5 className=\"empty-state-cart\">\r\n                  Please add a medicine to cart\r\n                </h5>\r\n              }\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;","import easyinvoice from \"easyinvoice\";\r\n\r\nexport const PDFInvoice = (\r\n  logo,\r\n  senderDetails,\r\n  clientDetails,\r\n  invoiceNumber,\r\n  invoiceDate,\r\n  products,\r\n  bottomNotice\r\n) => {\r\n  const data = {\r\n    currency: \"INR\",\r\n    locale: \"en-IN\",\r\n    taxNotation: \"GST\",\r\n    marginTop: 25,\r\n    marginRight: 25,\r\n    marginLeft: 25,\r\n    marginBottom: 25,\r\n    logo: logo,\r\n    sender: senderDetails,\r\n    // sender: {\r\n    //   company: \"Sample Corp\",\r\n    //   address: \"Sample Street 123\",\r\n    //   zip: \"1234 AB\",\r\n    //   city: \"Sampletown\",\r\n    //   country: \"Samplecountry\",\r\n    // },\r\n    client: clientDetails,\r\n    // client: {\r\n    //   company: \"Client Corp\",\r\n    //   address: \"Clientstreet 456\",\r\n    //   zip: \"4567 CD\",\r\n    //   city: \"Clientcity\",\r\n    //   country: \"Clientcountry\",\r\n    // },\r\n    invoiceNumber: invoiceNumber,\r\n    invoiceDate: invoiceDate,\r\n    products: products,\r\n    // products: [\r\n    //   {\r\n    //     quantity: \"2\",\r\n    //     description: \"Test1\",\r\n    //     tax: 6,\r\n    //     price: 33.87,\r\n    //   },\r\n    //   {\r\n    //     quantity: \"4\",\r\n    //     description: \"Test2\",\r\n    //     tax: 21,\r\n    //     price: 10.45,\r\n    //   },\r\n    //   {\r\n    //     quantity: \"4\",\r\n    //     description: \"Test2\",\r\n    //     tax: 21,\r\n    //     price: 10.45,\r\n    //   },\r\n    // ],\r\n    bottomNotice: bottomNotice,\r\n  };\r\n\r\n  easyinvoice.createInvoice(data, function (result) {\r\n    return easyinvoice.download(\"myInvoice.pdf\", result.pdf);\r\n  });\r\n};\r\n"],"sourceRoot":""}