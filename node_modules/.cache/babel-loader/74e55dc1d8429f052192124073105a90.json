{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AbdulRashid\\\\Desktop\\\\pesto\\\\Project\\\\ninja\\\\n7-medicalinventory-fullstack-eta-1-7\\\\src\\\\screens\\\\Employee\\\\Employee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport './Employee.css';\nimport axios from '../../axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport ls from 'local-storage';\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport TextField from \"../../components/TextField/TextField\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { instanceShop } from '../../features/shop/shopSlice';\nimport { selectIsAdmin } from '../../features/login/loginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employee() {\n  _s();\n\n  const history = useHistory();\n  const shop_id = useSelector(instanceShop);\n  const isAdmin = useSelector(selectIsAdmin);\n  useEffect(() => {\n    if (!isAdmin) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async values => {\n    console.log(values);\n\n    try {\n      const response = await axios.post('/api/employee/', values, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${ls.get('token')}`\n        }\n      });\n      console.log(response);\n      history.replace('/');\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Authentication denied\");\n    }\n  };\n\n  const phoneRegExp = \"/^[6-9]\\d{9}$/\";\n  const validate = Yup.object({\n    email: Yup.string().required(\"Required*\").email(),\n    password: Yup.string().required(\"Required*\"),\n    first_name: Yup.string().required(\"Required*\"),\n    username: Yup.string().required(\"Required*\"),\n    date_joined: Yup.string().required(\"Required*\"),\n    phone: Yup.string().required(\"Required*\").min(10, \"phone number not valid\").max(10, \"phone number not valid\")\n  });\n\n  const check_username_exists = async username => {\n    console.log(username);\n\n    if (username.trim()) {\n      try {\n        const response = await axios.post('/username-exists/', {\n          username: username\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${ls.get('token')}`\n          }\n        });\n\n        if (response.data.exists) {\n          toast.error(\"Username exists\");\n        }\n      } catch (error) {\n        console.log(\"here\");\n        return false;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: validate,\n    initialValues: {\n      email: '',\n      password: '',\n      first_name: '',\n      username: '',\n      date_joined: '',\n      phone: '',\n      company: shop_id\n    },\n    onSubmit: handleSubmit,\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"username\",\n                type: \"text\",\n                placeholder: \"username\",\n                onBlur: () => check_username_exists(formik.values.username)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"first_name\",\n                type: \"text\",\n                placeholder: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"email\",\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"date_joined\",\n                type: \"date\",\n                placeholder: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"phone\",\n                type: \"number\",\n                placeholder: \"Mobile no\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                style: {\n                  border: \"none\",\n                  backgroundColor: \"#28b8b0\"\n                },\n                disabled: !(formik.isValid && formik.dirty),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Employee, \"V+rI45rKMDi2REK+WCBxTg3EbAI=\", false, function () {\n  return [useHistory, useSelector, useSelector];\n});\n\n_c = Employee;\nexport default Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["C:/Users/AbdulRashid/Desktop/pesto/Project/ninja/n7-medicalinventory-fullstack-eta-1-7/src/screens/Employee/Employee.js"],"names":["React","useEffect","Yup","Formik","Form","axios","useDispatch","useSelector","useHistory","ls","Container","Row","Col","Button","TextField","toast","instanceShop","selectIsAdmin","Employee","history","shop_id","isAdmin","replace","handleSubmit","values","console","log","response","post","headers","get","error","phoneRegExp","validate","object","email","string","required","password","first_name","username","date_joined","phone","min","max","check_username_exists","trim","data","exists","company","formik","border","backgroundColor","isValid","dirty"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport './Employee.css'\r\nimport axios from '../../axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport ls from 'local-storage'\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport TextField from \"../../components/TextField/TextField\";\r\nimport { toast } from \"../../components/Toast/Toast\";\r\nimport { instanceShop } from '../../features/shop/shopSlice';\r\nimport { selectIsAdmin } from '../../features/login/loginSlice';\r\nfunction Employee() {\r\n    const history = useHistory()\r\n    const shop_id = useSelector(instanceShop)\r\n    const isAdmin = useSelector(selectIsAdmin)\r\n    useEffect(() => {\r\n      if(!isAdmin){\r\n        history.replace('/')\r\n      }\r\n    }, [])\r\n    const handleSubmit = async (values) => {\r\n\r\n        console.log(values)\r\n            try {\r\n                const response = await axios.post('/api/employee/',values, {headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Token ${ls.get('token')}` \r\n                    \r\n                }})\r\n                console.log(response)\r\n                history.replace('/')\r\n            } \r\n              catch (error) {\r\n                  console.log(error)\r\n                  toast.error(\"Authentication denied\")\r\n\r\n              }\r\n    }\r\n    const phoneRegExp = \"/^[6-9]\\d{9}$/\"\r\n    const validate = Yup.object({\r\n        email: Yup.string().required(\"Required*\").email(),\r\n        password: Yup.string().required(\"Required*\"),\r\n        first_name: Yup.string().required(\"Required*\"),\r\n        username: Yup.string().required(\"Required*\"),\r\n        date_joined: Yup.string().required(\"Required*\"),\r\n        phone: Yup.string().required(\"Required*\").min(10, \"phone number not valid\").max(10, \"phone number not valid\"),\r\n      });\r\n    const check_username_exists = async (username) => {\r\n        console.log(username)\r\n        if(username.trim()){\r\n            try {\r\n                const response = await axios.post('/username-exists/',{username:username}, {headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Token ${ls.get('token')}`  \r\n                }})\r\n                if(response.data.exists){\r\n                  toast.error(\"Username exists\")\r\n                }\r\n            } \r\n              catch (error) {\r\n                  console.log(\"here\")\r\n                  return false\r\n    \r\n              }\r\n\r\n        }\r\n        \r\n    }\r\n    return (\r\n\r\n            \r\n            <Formik\r\n            validationSchema={validate}\r\n            initialValues={{ email: '', password: '' ,first_name:'',username:'',date_joined:'',phone:'',company:shop_id}}\r\n            onSubmit={handleSubmit}\r\n            >\r\n            {(formik) => (\r\n                \r\n                <div>\r\n                  <h1>Register Employee</h1>\r\n                <Form>\r\n                  <Container>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"username\"\r\n                          type=\"text\"\r\n                          placeholder=\"username\"\r\n                          onBlur={() => check_username_exists(formik.values.username)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          placeholder=\"password\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"first_name\"\r\n                          type=\"text\"\r\n                          placeholder=\"name\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          placeholder=\"Email\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n      \r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"date_joined\"\r\n                          type=\"date\"\r\n                          placeholder=\"Date\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n      \r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <TextField\r\n                          name=\"phone\"\r\n                          type=\"number\"\r\n                          placeholder=\"Mobile no\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n      \r\n                   \r\n      \r\n                    <Row>\r\n                      <div className=\"d-grid gap-2\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          style={{\r\n                            border: \"none\",\r\n                            backgroundColor: \"#28b8b0\",\r\n                          }}\r\n                          disabled={!(formik.isValid && formik.dirty)}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                    </Row>\r\n                  </Container>\r\n                </Form>\r\n              </div>\r\n            )}\r\n            </Formik>\r\n            \r\n  );\r\n}\r\n\r\nexport default Employee;\r\n"]},"metadata":{},"sourceType":"module"}