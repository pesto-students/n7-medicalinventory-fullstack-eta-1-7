{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nimport { AUTH_TOKEN, removeToken } from \"../../localStorage\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport ls from 'local-storage';\nconst initialState = {\n  shops: [],\n  status: 'idle',\n  instanceShop: null,\n  error: ''\n};\nexport const fetchShops = createAsyncThunk(\"shop/fetchShops\", async thunkAPI => {\n  try {\n    console.log(AUTH_TOKEN);\n    const response = await axios.get(\"/api/company/\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${ls.get('token')}`\n      }\n    });\n    console.log(response.data);\n    return response.data.data;\n  } catch (error) {\n    toast.error(error.message);\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState,\n  reducers: {\n    currentShop: (state, action) => {\n      console.log(action.payload);\n      state.instanceShop = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchShops.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchShops.fulfilled, (state, action) => {\n      state.status = 'idle';\n      console.log(action.payload);\n      state.shops = action.payload;\n      state.error = '';\n    }).addCase(fetchShops.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  currentShop\n} = shopSlice.actions;\nexport const instanceShop = state => state.shop.instanceShop;\nexport default shopSlice.reducer;","map":{"version":3,"sources":["C:/Users/AbdulRashid/Desktop/pesto/Project/ninja/n7-medicalinventory-fullstack-eta-1-7/src/features/shop/shopSlice.js"],"names":["createAsyncThunk","createSlice","axios","AUTH_TOKEN","removeToken","toast","ls","initialState","shops","status","instanceShop","error","fetchShops","thunkAPI","console","log","response","get","headers","data","message","rejectWithValue","shopSlice","name","reducers","currentShop","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","shop","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,oBAAxC;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE,MAFW;AAGnBC,EAAAA,YAAY,EAAC,IAHM;AAInBC,EAAAA,KAAK,EAAC;AAJa,CAArB;AAOA,OAAO,MAAMC,UAAU,GAAGZ,gBAAgB,CACxC,iBADwC,EAExC,MAAOa,QAAP,IAAoB;AAClB,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACA,UAAMa,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,eAAV,EAA2B;AAChDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,SAAQZ,EAAE,CAACW,GAAH,CAAO,OAAP,CAAgB;AAFnC;AADuC,KAA3B,CAAvB;AAMAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACG,IAArB;AACA,WAAOH,QAAQ,CAACG,IAAT,CAAcA,IAArB;AACD,GAVD,CAUE,OAAOR,KAAP,EAAc;AACdN,IAAAA,KAAK,CAACM,KAAN,CAAYA,KAAK,CAACS,OAAlB;AACA,WAAOP,QAAQ,CAACQ,eAAT,CAAyBV,KAAK,CAACS,OAA/B,CAAP;AACD;AAAC,CAhBoC,CAAnC;AAmBP,OAAO,MAAME,SAAS,GAAGrB,WAAW,CAAC;AACjCsB,EAAAA,IAAI,EAAE,MAD2B;AAEjChB,EAAAA,YAFiC;AAGjCiB,EAAAA,QAAQ,EAAC;AACPC,IAAAA,WAAW,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5Bb,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAM,CAACC,OAAnB;AACAF,MAAAA,KAAK,CAAChB,YAAN,GAAqBiB,MAAM,CAACC,OAA5B;AACD;AAJM,GAHwB;AASjCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACJC,OADH,CACWnB,UAAU,CAACoB,OADtB,EACgCN,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACjB,MAAN,GAAe,SAAf;AACD,KAHH,EAIGsB,OAJH,CAIWnB,UAAU,CAACqB,SAJtB,EAIiC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAChDD,MAAAA,KAAK,CAACjB,MAAN,GAAe,MAAf;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAM,CAACC,OAAnB;AACAF,MAAAA,KAAK,CAAClB,KAAN,GAAcmB,MAAM,CAACC,OAArB;AACAF,MAAAA,KAAK,CAACf,KAAN,GAAc,EAAd;AAED,KAVH,EAWGoB,OAXH,CAWWnB,UAAU,CAACsB,QAXtB,EAWgC,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC/CD,MAAAA,KAAK,CAACjB,MAAN,GAAe,OAAf;AACAiB,MAAAA,KAAK,CAACf,KAAN,GAAcgB,MAAM,CAACC,OAArB;AACD,KAdH;AAeD;AAzB8B,CAAD,CAA7B;AA4BL,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAkBH,SAAS,CAACa,OAAlC;AACP,OAAO,MAAMzB,YAAY,GAAIgB,KAAD,IAAWA,KAAK,CAACU,IAAN,CAAW1B,YAA3C;AACP,eAAeY,SAAS,CAACe,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\nimport { AUTH_TOKEN, removeToken } from \"../../localStorage\";\r\nimport { toast } from \"../../components/Toast/Toast\";\r\nimport ls from 'local-storage'\r\nconst initialState = {\r\n  shops: [],\r\n  status: 'idle',\r\n  instanceShop:null,\r\n  error:''\r\n};\r\n\r\nexport const fetchShops = createAsyncThunk(\r\n  \"shop/fetchShops\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      console.log(AUTH_TOKEN)\r\n      const response = await axios.get(\"/api/company/\", {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Token ${ls.get('token')}`,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }}\r\n  );\r\n\r\nexport const shopSlice = createSlice({\r\n    name: 'shop',\r\n    initialState,\r\n    reducers:{\r\n      currentShop:(state,action) => {\r\n        console.log(action.payload)\r\n        state.instanceShop = action.payload\r\n      }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n          .addCase(fetchShops.pending, (state) => {\r\n            state.status = 'loading';\r\n          })\r\n          .addCase(fetchShops.fulfilled, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload)\r\n            state.shops = action.payload;\r\n            state.error = ''\r\n            \r\n          })\r\n          .addCase(fetchShops.rejected, (state, action) => {\r\n            state.status = 'error';\r\n            state.error = action.payload;\r\n          })\r\n      },\r\n  });\r\n  \r\n  export const { currentShop } = shopSlice.actions;\r\n  export const instanceShop = (state) => state.shop.instanceShop;\r\n  export default shopSlice.reducer;"]},"metadata":{},"sourceType":"module"}