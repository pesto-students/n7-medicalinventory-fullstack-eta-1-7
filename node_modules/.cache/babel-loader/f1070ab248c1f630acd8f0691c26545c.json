{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AbdulRashid\\\\Desktop\\\\pesto\\\\Project\\\\ninja\\\\n7-medicalinventory-fullstack-eta-1-7\\\\src\\\\screens\\\\SearchPage\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Accordion, Form, Dropdown, Card, Button, Modal } from \"react-bootstrap\";\nimport { FunnelFill } from \"react-bootstrap-icons\";\nimport \"./SearchPage.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader/Loader\";\nimport EmptyState from \"../../components/EmptyState/EmptyState\";\nimport { getSearchedData } from \"../../features/search/searchSlice\";\nimport ls from \"local-storage\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SORT_BY_MENUS = [{\n  label: \"Relevance\",\n  value: \"relevance\"\n}, {\n  label: \"Price: Low to High\",\n  value: \"lowToHigh\"\n}, {\n  label: \"Price: High to Low\",\n  value: \"highToLow\"\n}];\nconst BRANDS_FILTER = [{\n  label: \"StayHappi\",\n  value: \"StayHappi\"\n}, {\n  label: \"Dolo\",\n  value: \"Dolo\"\n}, {\n  label: \"Crocin\",\n  value: \"Crocin\"\n}, {\n  label: \"Alkem\",\n  value: \"Alkem\"\n}, {\n  label: \"Metacin\",\n  value: \"Metacin\"\n}];\nconst PRODUCT_FORM = [{\n  label: \"Tablet\",\n  value: \"Tablet\"\n}, {\n  label: \"Syrup\",\n  value: \"Syrup\"\n}, {\n  label: \"Drop\",\n  value: \"Drop\"\n}, {\n  label: \"Injection\",\n  value: \"Injection\"\n}, {\n  label: \"Capsule\",\n  value: \"Capsule\"\n}];\nconst PRESCRIPTION_REQUIRED = [{\n  label: \"Required\",\n  value: \"true\"\n}, {\n  label: \"Not Required\",\n  value: \"false\"\n}];\nconst AGE = [{\n  label: \"All\",\n  value: \"All\"\n}, {\n  label: \"Child\",\n  value: \"Child\"\n}];\n\nconst SearchPage = ({\n  location\n}) => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const params = new URLSearchParams(location.search);\n  const searchedQuery = params.get(\"searchQuery\");\n  const [show, setShow] = useState(false);\n  const [sortBy, setSortBy] = useState(\"Relevance\");\n  const [currentAddToCartIndex, setCurrentAddToCartIndex] = useState(null);\n  const [filters, setFilters] = useState({\n    medicine_brand: [],\n    product_form: [],\n    presecription_required: [],\n    age: []\n  });\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n\n    if (params.get(\"asc\")) {\n      if (params.get(\"asc\") === \"true\") {\n        setSortBy(\"Price: Low to High\");\n      } else {\n        setSortBy(\"Price: High to Low\");\n      }\n    }\n\n    const paramsToObject = Object.fromEntries(params.entries());\n    const copyFilters = { ...filters\n    };\n    copyFilters.medicine_brand = paramsToObject && paramsToObject.medicine_brand ? paramsToObject.medicine_brand.split(\",\") : [];\n    copyFilters.product_form = paramsToObject && paramsToObject.product_form ? paramsToObject.product_form.split(\",\") : [];\n    copyFilters.presecription_required = paramsToObject && paramsToObject.presecription_required ? paramsToObject.presecription_required.split(\",\") : [];\n    copyFilters.age = paramsToObject && paramsToObject.age ? paramsToObject.age.split(\",\") : [];\n    setFilters(copyFilters);\n  }, []);\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n\n    if (sortBy !== \"Relevance\") {\n      if (params.get(\"asc\")) {\n        params.delete(\"asc\");\n      }\n\n      params.append(\"asc\", sortBy === \"Price: Low to High\" ? \"true\" : \"false\");\n      dispatch(getSearchedData(params));\n      history.push(`/search?${params}`);\n    } else {\n      if (params.get(\"asc\")) {\n        params.delete(\"asc\");\n      }\n\n      dispatch(getSearchedData(params));\n      history.push(`/search?${params}`);\n    }\n  }, [sortBy]);\n  useEffect(() => {\n    if (filters.medicine_brand.length > 0 || filters.product_form.length > 0 || filters.presecription_required > 0 || filters.age.length > 0) {\n      const params = new URLSearchParams(location.search);\n      let updatedFilters = { ...filters\n      };\n      updatedFilters.medicine_brand = updatedFilters.medicine_brand.toString();\n      updatedFilters.product_form = updatedFilters.product_form.toString();\n      updatedFilters.presecription_required = updatedFilters.presecription_required.toString();\n      updatedFilters.age = updatedFilters.age.toString();\n      Object.keys(updatedFilters).forEach(key => {\n        if (updatedFilters[key]) {\n          if (params.get(key)) {\n            params.delete(key);\n          }\n\n          params.append(key, updatedFilters[key]);\n        }\n      });\n      dispatch(getSearchedData(params));\n      history.push(`/search?${params}`);\n    }\n  }, [filters]);\n\n  const clearFilter = () => {\n    const params = new URLSearchParams(location.search);\n    params.delete(\"medicine_brand\");\n    params.delete(\"product_form\");\n    params.delete(\"presecription_required\");\n    params.delete(\"age\");\n    dispatch(getSearchedData(params));\n    history.push(`/search?${params}`);\n    setFilters({\n      medicine_brand: [],\n      product_form: [],\n      presecription_required: [],\n      age: []\n    });\n  };\n\n  const checkDuplicate = (currentItem, oldItems) => {\n    if (oldItems.length == 0) {\n      currentItem.count = 1;\n      oldItems.push(currentItem);\n      return oldItems;\n    }\n\n    let isFind = false;\n    let findIndex;\n\n    for (let itemIndex = 0; itemIndex < oldItems.length; itemIndex++) {\n      if (oldItems[itemIndex].id === currentItem.id) {\n        findIndex = itemIndex;\n        isFind = true;\n      }\n    }\n\n    if (isFind) {\n      oldItems[findIndex].count = oldItems[findIndex].count + 1;\n      return oldItems;\n    }\n\n    currentItem.count = 1;\n    oldItems.push(currentItem);\n    return oldItems;\n  };\n\n  const handleAddToCart = (item, index) => {\n    let currentItem = { ...item\n    };\n    let oldItems = JSON.parse(ls.get(\"cartData\")) || [];\n    let updateOld = checkDuplicate(currentItem, oldItems);\n    ls.set(\"cartData\", JSON.stringify(updateOld)); //////\n\n    setCurrentAddToCartIndex(index);\n    setTimeout(() => {\n      setCurrentAddToCartIndex(null);\n    }, 1000);\n  };\n\n  let filteredListingData = useSelector(state => state.search);\n\n  if (filteredListingData.status === \"failed\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Error\"\n    }, void 0, false);\n  }\n\n  if (filteredListingData.status === \"success\" || filteredListingData.status === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-page-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-page--left-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-b-12 clear-filter-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"clear-filter\",\n              onClick: () => clearFilter(),\n              children: \"Clear Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            flush: true,\n            className: \"m-b-12\",\n            children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Brands\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"accordion-body\",\n                children: BRANDS_FILTER.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  name: item.value,\n                  checked: filters.medicine_brand.indexOf(item.value) !== -1,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      let brandNames = filters.medicine_brand;\n                      brandNames.push(e.target.name);\n                      setFilters({ ...filters,\n                        medicine_brand: brandNames\n                      });\n                    } else {\n                      if (filters.medicine_brand.indexOf(e.target.name) !== -1) {\n                        let brandNames = filters.medicine_brand;\n                        brandNames.splice(filters.medicine_brand.indexOf(e.target.name), 1);\n                        setFilters({ ...filters,\n                          medicine_brand: brandNames\n                        });\n                      }\n                    }\n                  },\n                  label: item.label,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, item.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            flush: true,\n            className: \"m-b-12\",\n            children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Product Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"accordion-body\",\n                children: PRODUCT_FORM.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  name: item.value,\n                  checked: filters.product_form.indexOf(item.value) !== -1,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      let brandNames = filters.product_form;\n                      brandNames.push(e.target.name);\n                      setFilters({ ...filters,\n                        product_form: brandNames\n                      });\n                    } else {\n                      if (filters.product_form.indexOf(e.target.name) !== -1) {\n                        let brandNames = filters.product_form;\n                        brandNames.splice(filters.product_form.indexOf(e.target.name), 1);\n                        setFilters({ ...filters,\n                          product_form: brandNames\n                        });\n                      }\n                    }\n                  },\n                  label: item.label,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, item.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            flush: true,\n            className: \"m-b-12\",\n            children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Prescription Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"accordion-body\",\n                children: PRESCRIPTION_REQUIRED.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  name: item.value,\n                  checked: filters.presecription_required.indexOf(item.value) !== -1,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      let brandNames = filters.presecription_required;\n                      brandNames.push(e.target.name);\n                      setFilters({ ...filters,\n                        presecription_required: brandNames\n                      });\n                    } else {\n                      if (filters.presecription_required.indexOf(e.target.name) !== -1) {\n                        let brandNames = filters.presecription_required;\n                        brandNames.splice(filters.presecription_required.indexOf(e.target.name), 1);\n                        setFilters({ ...filters,\n                          presecription_required: brandNames\n                        });\n                      }\n                    }\n                  },\n                  label: item.label,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, item.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            flush: true,\n            className: \"m-b-12\",\n            children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"accordion-body\",\n                children: AGE.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  name: item.value,\n                  checked: filters.age.indexOf(item.value) !== -1,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      let brandNames = filters.age;\n                      brandNames.push(e.target.name);\n                      setFilters({ ...filters,\n                        age: brandNames\n                      });\n                    } else {\n                      if (filters.age.indexOf(e.target.name) !== -1) {\n                        let brandNames = filters.age;\n                        brandNames.splice(filters.age.indexOf(e.target.name), 1);\n                        setFilters({ ...filters,\n                          age: brandNames\n                        });\n                      }\n                    }\n                  },\n                  label: item.label,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, item.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-page--right-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-page--header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-size-14\",\n                children: \"Search Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-size-26\",\n                children: [\"\\\"\", searchedQuery, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sort By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"dropdown-wrapper\",\n                  onSelect: value => {\n                    setSortBy(value);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    variant: \"white\",\n                    id: \"dropdown-basic\",\n                    children: sortBy\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: SORT_BY_MENUS.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: item.label,\n                      children: item.label\n                    }, item.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-top-12\",\n            children: filteredListingData.status === \"loading\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Loader, {\n                inline: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: filteredListingData && filteredListingData.searchedData && filteredListingData.searchedData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: filteredListingData.searchedData.map((item, i) => /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"m-b-12\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-column\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-content-sb\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex-column\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-weight-700\",\n                            children: item === null || item === void 0 ? void 0 : item.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 461,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 460,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex-column\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [\"\\u20B9\", (item === null || item === void 0 ? void 0 : item.sell_price) || 0]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 470,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"search-page--counter-wrapper\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"search-page-wrapper\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 475,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"addToCartWrapper\",\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: [currentAddToCartIndex === i && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"search-page--add-cart\",\n                            children: \"\\u2713\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 481,\n                            columnNumber: 37\n                          }, this), \"\\xA0\", currentAddToCartIndex !== i ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"search-page--add-cart\",\n                            onClick: () => {\n                              handleAddToCart(item, i);\n                            },\n                            children: \"ADD TO CART\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 487,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: currentAddToCartIndex === i && /*#__PURE__*/_jsxDEV(\"div\", {\n                              id: \"addToCart\",\n                              className: \"search-page--add-cart\",\n                              children: \"ADDED\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 498,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(EmptyState, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShow(true),\n            className: \"funner-filter--wrapper\",\n            children: /*#__PURE__*/_jsxDEV(FunnelFill, {\n              size: 30,\n              color: \"#28b8b0\",\n              className: \"mr-20 cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          fullscreen: true,\n          onHide: () => setShow(false),\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Apply Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Accordion, {\n                flush: true,\n                className: \"m-b-12\",\n                children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Brands\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    className: \"accordion-body\",\n                    children: BRANDS_FILTER.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      name: item.value,\n                      checked: filters.medicine_brand.indexOf(item.value) !== -1,\n                      onChange: e => {\n                        if (e.target.checked) {\n                          let brandNames = filters.medicine_brand;\n                          brandNames.push(e.target.name);\n                          setFilters({ ...filters,\n                            medicine_brand: brandNames\n                          });\n                        } else {\n                          if (filters.medicine_brand.indexOf(e.target.name) !== -1) {\n                            let brandNames = filters.medicine_brand;\n                            brandNames.splice(filters.medicine_brand.indexOf(e.target.name), 1);\n                            setFilters({ ...filters,\n                              medicine_brand: brandNames\n                            });\n                          }\n                        }\n                      },\n                      label: item.label,\n                      style: {\n                        cursor: \"pointer\"\n                      }\n                    }, item.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n                flush: true,\n                className: \"m-b-12\",\n                children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Product Form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    className: \"accordion-body\",\n                    children: PRODUCT_FORM.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      name: item.value,\n                      checked: filters.product_form.indexOf(item.value) !== -1,\n                      onChange: e => {\n                        if (e.target.checked) {\n                          let brandNames = filters.product_form;\n                          brandNames.push(e.target.name);\n                          setFilters({ ...filters,\n                            product_form: brandNames\n                          });\n                        } else {\n                          if (filters.product_form.indexOf(e.target.name) !== -1) {\n                            let brandNames = filters.product_form;\n                            brandNames.splice(filters.product_form.indexOf(e.target.name), 1);\n                            setFilters({ ...filters,\n                              product_form: brandNames\n                            });\n                          }\n                        }\n                      },\n                      label: item.label,\n                      style: {\n                        cursor: \"pointer\"\n                      }\n                    }, item.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n                flush: true,\n                className: \"m-b-12\",\n                children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Prescription Required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    className: \"accordion-body\",\n                    children: PRESCRIPTION_REQUIRED.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      name: item.value,\n                      checked: filters.presecription_required.indexOf(item.value) !== -1,\n                      onChange: e => {\n                        if (e.target.checked) {\n                          let brandNames = filters.presecription_required;\n                          brandNames.push(e.target.name);\n                          setFilters({ ...filters,\n                            presecription_required: brandNames\n                          });\n                        } else {\n                          if (filters.presecription_required.indexOf(e.target.name) !== -1) {\n                            let brandNames = filters.presecription_required;\n                            brandNames.splice(filters.presecription_required.indexOf(e.target.name), 1);\n                            setFilters({ ...filters,\n                              presecription_required: brandNames\n                            });\n                          }\n                        }\n                      },\n                      label: item.label,\n                      style: {\n                        cursor: \"pointer\"\n                      }\n                    }, item.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n                flush: true,\n                className: \"m-b-12\",\n                children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Age\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    className: \"accordion-body\",\n                    children: AGE.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      name: item.value,\n                      checked: filters.age.indexOf(item.value) !== -1,\n                      onChange: e => {\n                        if (e.target.checked) {\n                          let brandNames = filters.age;\n                          brandNames.push(e.target.name);\n                          setFilters({ ...filters,\n                            age: brandNames\n                          });\n                        } else {\n                          if (filters.age.indexOf(e.target.name) !== -1) {\n                            let brandNames = filters.age;\n                            brandNames.splice(filters.age.indexOf(e.target.name), 1);\n                            setFilters({ ...filters,\n                              age: brandNames\n                            });\n                          }\n                        }\n                      },\n                      label: item.label,\n                      style: {\n                        cursor: \"pointer\"\n                      }\n                    }, item.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filter-apply-button\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid gap-2\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"lg\",\n                    className: \"apply-button--wrapper\",\n                    onClick: () => setShow(false),\n                    children: \"Apply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(SearchPage, \"3wWFmOxazxlwM9MnBQkDb8ieako=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/AbdulRashid/Desktop/pesto/Project/ninja/n7-medicalinventory-fullstack-eta-1-7/src/screens/SearchPage/SearchPage.js"],"names":["React","useState","useEffect","Accordion","Form","Dropdown","Card","Button","Modal","FunnelFill","useSelector","useDispatch","useHistory","Loader","EmptyState","getSearchedData","ls","SORT_BY_MENUS","label","value","BRANDS_FILTER","PRODUCT_FORM","PRESCRIPTION_REQUIRED","AGE","SearchPage","location","history","dispatch","params","URLSearchParams","search","searchedQuery","get","show","setShow","sortBy","setSortBy","currentAddToCartIndex","setCurrentAddToCartIndex","filters","setFilters","medicine_brand","product_form","presecription_required","age","paramsToObject","Object","fromEntries","entries","copyFilters","split","delete","append","push","length","updatedFilters","toString","keys","forEach","key","clearFilter","checkDuplicate","currentItem","oldItems","count","isFind","findIndex","itemIndex","id","handleAddToCart","item","index","JSON","parse","updateOld","set","stringify","setTimeout","filteredListingData","state","status","map","indexOf","e","target","checked","brandNames","name","splice","cursor","searchedData","i","sell_price","display"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Form,\r\n  Dropdown,\r\n  Card,\r\n  Button,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { FunnelFill } from \"react-bootstrap-icons\";\r\nimport \"./SearchPage.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport EmptyState from \"../../components/EmptyState/EmptyState\";\r\nimport { getSearchedData } from \"../../features/search/searchSlice\";\r\nimport ls from \"local-storage\";\r\n\r\nconst SORT_BY_MENUS = [\r\n  { label: \"Relevance\", value: \"relevance\" },\r\n  { label: \"Price: Low to High\", value: \"lowToHigh\" },\r\n  { label: \"Price: High to Low\", value: \"highToLow\" },\r\n];\r\n\r\nconst BRANDS_FILTER = [\r\n  { label: \"StayHappi\", value: \"StayHappi\" },\r\n  { label: \"Dolo\", value: \"Dolo\" },\r\n  { label: \"Crocin\", value: \"Crocin\" },\r\n  { label: \"Alkem\", value: \"Alkem\" },\r\n  { label: \"Metacin\", value: \"Metacin\" },\r\n];\r\n\r\nconst PRODUCT_FORM = [\r\n  { label: \"Tablet\", value: \"Tablet\" },\r\n  { label: \"Syrup\", value: \"Syrup\" },\r\n  { label: \"Drop\", value: \"Drop\" },\r\n  { label: \"Injection\", value: \"Injection\" },\r\n  { label: \"Capsule\", value: \"Capsule\" },\r\n];\r\n\r\nconst PRESCRIPTION_REQUIRED = [\r\n  { label: \"Required\", value: \"true\" },\r\n  { label: \"Not Required\", value: \"false\" },\r\n];\r\n\r\nconst AGE = [\r\n  { label: \"All\", value: \"All\" },\r\n  { label: \"Child\", value: \"Child\" },\r\n];\r\n\r\nconst SearchPage = ({ location }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const params = new URLSearchParams(location.search);\r\n  const searchedQuery = params.get(\"searchQuery\");\r\n  const [show, setShow] = useState(false);\r\n  const [sortBy, setSortBy] = useState(\"Relevance\");\r\n  const [currentAddToCartIndex, setCurrentAddToCartIndex] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    medicine_brand: [],\r\n    product_form: [],\r\n    presecription_required: [],\r\n    age: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    if (params.get(\"asc\")) {\r\n      if (params.get(\"asc\") === \"true\") {\r\n        setSortBy(\"Price: Low to High\");\r\n      } else {\r\n        setSortBy(\"Price: High to Low\");\r\n      }\r\n    }\r\n\r\n    const paramsToObject = Object.fromEntries(params.entries());\r\n\r\n    const copyFilters = { ...filters };\r\n\r\n    copyFilters.medicine_brand =\r\n      paramsToObject && paramsToObject.medicine_brand\r\n        ? paramsToObject.medicine_brand.split(\",\")\r\n        : [];\r\n    copyFilters.product_form =\r\n      paramsToObject && paramsToObject.product_form\r\n        ? paramsToObject.product_form.split(\",\")\r\n        : [];\r\n    copyFilters.presecription_required =\r\n      paramsToObject && paramsToObject.presecription_required\r\n        ? paramsToObject.presecription_required.split(\",\")\r\n        : [];\r\n    copyFilters.age =\r\n      paramsToObject && paramsToObject.age ? paramsToObject.age.split(\",\") : [];\r\n\r\n    setFilters(copyFilters);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    if (sortBy !== \"Relevance\") {\r\n      if (params.get(\"asc\")) {\r\n        params.delete(\"asc\");\r\n      }\r\n      params.append(\"asc\", sortBy === \"Price: Low to High\" ? \"true\" : \"false\");\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    } else {\r\n      if (params.get(\"asc\")) {\r\n        params.delete(\"asc\");\r\n      }\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    }\r\n  }, [sortBy]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      filters.medicine_brand.length > 0 ||\r\n      filters.product_form.length > 0 ||\r\n      filters.presecription_required > 0 ||\r\n      filters.age.length > 0\r\n    ) {\r\n      const params = new URLSearchParams(location.search);\r\n      let updatedFilters = { ...filters };\r\n\r\n      updatedFilters.medicine_brand = updatedFilters.medicine_brand.toString();\r\n      updatedFilters.product_form = updatedFilters.product_form.toString();\r\n      updatedFilters.presecription_required =\r\n        updatedFilters.presecription_required.toString();\r\n      updatedFilters.age = updatedFilters.age.toString();\r\n\r\n      Object.keys(updatedFilters).forEach((key) => {\r\n        if (updatedFilters[key]) {\r\n          if (params.get(key)) {\r\n            params.delete(key);\r\n          }\r\n          params.append(key, updatedFilters[key]);\r\n        }\r\n      });\r\n\r\n      dispatch(getSearchedData(params));\r\n      history.push(`/search?${params}`);\r\n    }\r\n  }, [filters]);\r\n\r\n  const clearFilter = () => {\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    params.delete(\"medicine_brand\");\r\n    params.delete(\"product_form\");\r\n    params.delete(\"presecription_required\");\r\n    params.delete(\"age\");\r\n\r\n    dispatch(getSearchedData(params));\r\n    history.push(`/search?${params}`);\r\n    setFilters({\r\n      medicine_brand: [],\r\n      product_form: [],\r\n      presecription_required: [],\r\n      age: [],\r\n    });\r\n  };\r\n\r\n  const checkDuplicate = (currentItem, oldItems) => {\r\n    if (oldItems.length == 0) {\r\n      currentItem.count = 1;\r\n      oldItems.push(currentItem);\r\n      return oldItems;\r\n    }\r\n    let isFind = false;\r\n    let findIndex;\r\n    for (let itemIndex = 0; itemIndex < oldItems.length; itemIndex++) {\r\n      if (oldItems[itemIndex].id === currentItem.id) {\r\n        findIndex = itemIndex;\r\n        isFind = true;\r\n      }\r\n    }\r\n    if (isFind) {\r\n      oldItems[findIndex].count = oldItems[findIndex].count + 1;\r\n      return oldItems;\r\n    }\r\n    currentItem.count = 1;\r\n    oldItems.push(currentItem);\r\n    return oldItems;\r\n  };\r\n\r\n  const handleAddToCart = (item, index) => {\r\n    let currentItem = { ...item };\r\n    let oldItems = JSON.parse(ls.get(\"cartData\")) || [];\r\n    let updateOld = checkDuplicate(currentItem, oldItems);\r\n\r\n    ls.set(\"cartData\", JSON.stringify(updateOld));\r\n\r\n    //////\r\n    setCurrentAddToCartIndex(index);\r\n    setTimeout(() => {\r\n      setCurrentAddToCartIndex(null);\r\n    }, 1000);\r\n  };\r\n\r\n  let filteredListingData = useSelector((state) => state.search);\r\n\r\n  if (filteredListingData.status === \"failed\") {\r\n    return <>Error</>;\r\n  }\r\n\r\n  if (\r\n    filteredListingData.status === \"success\" ||\r\n    filteredListingData.status === \"loading\"\r\n  ) {\r\n    return (\r\n      <>\r\n        <div className=\"search-page-wrapper\">\r\n          <div className=\"search-page--left-panel\">\r\n            <div className=\"m-b-12 clear-filter-wrapper\">\r\n              <h4>Filters</h4>\r\n              <span className=\"clear-filter\" onClick={() => clearFilter()}>\r\n                Clear Filters\r\n              </span>\r\n            </div>\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Brands</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {BRANDS_FILTER.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={\r\n                        filters.medicine_brand.indexOf(item.value) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.medicine_brand;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            medicine_brand: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.medicine_brand.indexOf(e.target.name) !== -1\r\n                          ) {\r\n                            let brandNames = filters.medicine_brand;\r\n                            brandNames.splice(\r\n                              filters.medicine_brand.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              medicine_brand: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Product Form</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {PRODUCT_FORM.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={filters.product_form.indexOf(item.value) !== -1}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.product_form;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            product_form: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.product_form.indexOf(e.target.name) !== -1\r\n                          ) {\r\n                            let brandNames = filters.product_form;\r\n                            brandNames.splice(\r\n                              filters.product_form.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              product_form: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Prescription Required</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {PRESCRIPTION_REQUIRED.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={\r\n                        filters.presecription_required.indexOf(item.value) !==\r\n                        -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.presecription_required;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            presecription_required: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (\r\n                            filters.presecription_required.indexOf(\r\n                              e.target.name\r\n                            ) !== -1\r\n                          ) {\r\n                            let brandNames = filters.presecription_required;\r\n                            brandNames.splice(\r\n                              filters.presecription_required.indexOf(\r\n                                e.target.name\r\n                              ),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              presecription_required: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n\r\n            {/* <Accordion flush className=\"m-b-12\">\r\n                <Accordion.Item eventKey=\"1\">\r\n                  <Accordion.Header>Usage</Accordion.Header>\r\n                  <Accordion.Body className=\"accordion-body\">\r\n                    <Form.Check type=\"checkbox\" label=\"Fever\" />\r\n                    <Form.Check type=\"checkbox\" label=\"Cough & Cold\" />\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion> */}\r\n\r\n            <Accordion flush className=\"m-b-12\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>Age</Accordion.Header>\r\n                <Accordion.Body className=\"accordion-body\">\r\n                  {AGE.map((item) => (\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={item.value}\r\n                      checked={filters.age.indexOf(item.value) !== -1}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          let brandNames = filters.age;\r\n                          brandNames.push(e.target.name);\r\n                          setFilters({\r\n                            ...filters,\r\n                            age: brandNames,\r\n                          });\r\n                        } else {\r\n                          if (filters.age.indexOf(e.target.name) !== -1) {\r\n                            let brandNames = filters.age;\r\n                            brandNames.splice(\r\n                              filters.age.indexOf(e.target.name),\r\n                              1\r\n                            );\r\n\r\n                            setFilters({\r\n                              ...filters,\r\n                              age: brandNames,\r\n                            });\r\n                          }\r\n                        }\r\n                      }}\r\n                      key={item.value}\r\n                      label={item.label}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  ))}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </div>\r\n\r\n          <div className=\"search-page--right-panel\">\r\n            <div className=\"search-page--header\">\r\n              <div className=\"flex-column\">\r\n                <span className=\"font-size-14\">Search Results</span>\r\n                <span className=\"font-size-26\">\"{searchedQuery}\"</span>\r\n              </div>\r\n              <div className=\"flex-items-center\">\r\n                <span>Sort By</span>\r\n                <span>\r\n                  <Dropdown\r\n                    className=\"dropdown-wrapper\"\r\n                    onSelect={(value) => {\r\n                      setSortBy(value);\r\n                    }}\r\n                  >\r\n                    <Dropdown.Toggle variant=\"white\" id=\"dropdown-basic\">\r\n                      {sortBy}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      {SORT_BY_MENUS.map((item) => (\r\n                        <Dropdown.Item eventKey={item.label} key={item.value}>\r\n                          {item.label}\r\n                        </Dropdown.Item>\r\n                      ))}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"margin-top-12\">\r\n              {filteredListingData.status === \"loading\" ? (\r\n                <div>\r\n                  <Loader inline={true} />\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {filteredListingData &&\r\n                  filteredListingData.searchedData &&\r\n                  filteredListingData.searchedData.length ? (\r\n                    <>\r\n                      {filteredListingData.searchedData.map((item, i) => (\r\n                        <Card className=\"m-b-12\" key={item.id}>\r\n                          <Card.Body>\r\n                            <div className=\"flex-column\">\r\n                              <div className=\"flex-content-sb\">\r\n                                <div className=\"flex-column\">\r\n                                  <span className=\"font-weight-700\">\r\n                                    {item?.name}\r\n                                  </span>\r\n                                  {/* <span className=\"tablets-strip\">\r\n                                    strip of 15 tablets\r\n                                  </span> */}\r\n                                </div>\r\n\r\n                                <div className=\"flex-column\">\r\n                                  <span>₹{item?.sell_price || 0}</span>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"search-page--counter-wrapper\">\r\n                                <div className=\"search-page-wrapper\"></div>\r\n                                <div\r\n                                  id=\"addToCartWrapper\"\r\n                                  style={{ display: \"flex\" }}\r\n                                >\r\n                                  {currentAddToCartIndex === i && (\r\n                                    <div className=\"search-page--add-cart\">\r\n                                      &#10003;\r\n                                    </div>\r\n                                  )}\r\n                                  &nbsp;\r\n                                  {currentAddToCartIndex !== i ? (\r\n                                    <div\r\n                                      className=\"search-page--add-cart\"\r\n                                      onClick={() => {\r\n                                        handleAddToCart(item, i);\r\n                                      }}\r\n                                    >\r\n                                      ADD TO CART\r\n                                    </div>\r\n                                  ) : (\r\n                                    <>\r\n                                      {currentAddToCartIndex === i && (\r\n                                        <div\r\n                                          id=\"addToCart\"\r\n                                          className=\"search-page--add-cart\"\r\n                                        >\r\n                                          ADDED\r\n                                        </div>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <EmptyState />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"filter-button\">\r\n            <Button\r\n              onClick={() => setShow(true)}\r\n              className=\"funner-filter--wrapper\"\r\n            >\r\n              <FunnelFill\r\n                size={30}\r\n                color=\"#28b8b0\"\r\n                className=\"mr-20 cursor-pointer\"\r\n              />\r\n            </Button>\r\n          </div>\r\n\r\n          <Modal show={show} fullscreen={true} onHide={() => setShow(false)}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Apply Filters</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Brands</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {BRANDS_FILTER.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.medicine_brand.indexOf(item.value) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.medicine_brand;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                medicine_brand: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.medicine_brand.indexOf(\r\n                                  e.target.name\r\n                                ) !== -1\r\n                              ) {\r\n                                let brandNames = filters.medicine_brand;\r\n                                brandNames.splice(\r\n                                  filters.medicine_brand.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  medicine_brand: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Product Form</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {PRODUCT_FORM.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.product_form.indexOf(item.value) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.product_form;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                product_form: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.product_form.indexOf(e.target.name) !==\r\n                                -1\r\n                              ) {\r\n                                let brandNames = filters.product_form;\r\n                                brandNames.splice(\r\n                                  filters.product_form.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  product_form: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Prescription Required</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {PRESCRIPTION_REQUIRED.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={\r\n                            filters.presecription_required.indexOf(\r\n                              item.value\r\n                            ) !== -1\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.presecription_required;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                presecription_required: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (\r\n                                filters.presecription_required.indexOf(\r\n                                  e.target.name\r\n                                ) !== -1\r\n                              ) {\r\n                                let brandNames = filters.presecription_required;\r\n                                brandNames.splice(\r\n                                  filters.presecription_required.indexOf(\r\n                                    e.target.name\r\n                                  ),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  presecription_required: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion flush className=\"m-b-12\">\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Age</Accordion.Header>\r\n                    <Accordion.Body className=\"accordion-body\">\r\n                      {AGE.map((item) => (\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name={item.value}\r\n                          checked={filters.age.indexOf(item.value) !== -1}\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              let brandNames = filters.age;\r\n                              brandNames.push(e.target.name);\r\n                              setFilters({\r\n                                ...filters,\r\n                                age: brandNames,\r\n                              });\r\n                            } else {\r\n                              if (filters.age.indexOf(e.target.name) !== -1) {\r\n                                let brandNames = filters.age;\r\n                                brandNames.splice(\r\n                                  filters.age.indexOf(e.target.name),\r\n                                  1\r\n                                );\r\n\r\n                                setFilters({\r\n                                  ...filters,\r\n                                  age: brandNames,\r\n                                });\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={item.value}\r\n                          label={item.label}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      ))}\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <div className=\"filter-apply-button\">\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                      size=\"lg\"\r\n                      className=\"apply-button--wrapper\"\r\n                      onClick={() => setShow(false)}\r\n                    >\r\n                      Apply\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}